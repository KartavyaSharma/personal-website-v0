@tailwind base;

@layer base {
  h1 {
    @apply text-4xl font-semibold mb-6 text-white;
  }
  h2 {
    @apply text-3xl text-white;
  }
  h3 {
    @apply text-2xl font-semibold mb-4 leading-7 text-white !important;
  }
  p {
    @apply text-lg mb-6;
  }
  code {
    /*@apply p-5 bg-hover-bg block rounded-md overflow-x-auto !important;*/
  }
}

@tailwind components;
@tailwind utilities;

.utterances {
  margin: -16px 0;
  padding: 0 -4px;
  max-width: 56rem;
}

.inline-code-wrapper {
  background-color: #374785 !important;
  padding: 1px 2px 1px 2px;
  border-radius: 0.125rem;
}

::-webkit-scrollbar {
  width: 10px;
}

.TOC::-webkit-scrollbar {
  width: 3px !important;
}

.grvsc-container::-webkit-scrollbar {
  height: 8px !important;
}

.grvsc-container::-webkit-scrollbar-track {
  background: #002451;
  border-radius: 0px 0px 8px 8px !important;
}

::-webkit-scrollbar-track {
  background: #24305e;
}

::-webkit-scrollbar-thumb {
  background: #374785;
  border-radius: 3px;
}

::-webkit-scrollbar-thumb:hover {
  background: #a8d0e6;
}

@media (min-width: 1526px) {
  .page-heights {
    height: 100vh;
  }
}

@media (max-width: 768px) {
  .TOC {
    max-height: none !important;
  }
}

@media (max-width: 1536px) {
  .TOC {
    max-height: 300px;
  }
}

.grvsc-container {
    border-radius: 0px 0px 8px 8px !important;
}

@media (min-width: 768px) {
  .grvsc-container {
    margin-top: 8px !important;
    margin-bottom: 32px !important;
  }
}

@media (max-width: 768px) {
  .grvsc-container {
    margin-top: 8px !important;
    margin-bottom: 24px !important;
  }
}

p {
  color: #edf2f7 !important;
}

#body_content > ul {
  list-style-type: disc !important;
  list-style-position: inside !important;
  padding-left: 16px !important;
  margin-bottom: 24px !important;
  color: #edf2f7;
  font-size: 1.125rem;
  line-height: 1.75rem;
}

.highlight-headers {
  margin-bottom: -0.6rem;
  padding: 0.3em 1em;
  font-family: Consolas, "Andale Mono WT", "Andale Mono", "Lucida Console",
    "Lucida Sans Typewriter", "DejaVu Sans Mono", "Bitstream Vera Sans Mono",
    "Liberation Mono", "Nimbus Mono L", Monaco, "Courier New", Courier,
    monospace;

  background-color: #00346E;
  color: #A8D0E6;
  z-index: 0;

  border-top-left-radius: 0.3em;
  border-top-right-radius: 0.3em;
}

/*
=====
DEMO DEPENDENCIES
=====
*/

/* The component will reset button browser styles */

.r-button {
  --uirButtonBackgroundColor: var(--rButtonBackgroundColor, transparent);
  --uirButtonPadding: var(
    --rButtonPadding,
    var(--rButtonPaddingTop, 0) var(--rButtonPaddingRight, 0)
      var(--rButtonPaddingBottom, 0) var(--rButtonPaddingLeft, 0)
  );
  --uirButtonBorderWidth: var(--rButtonBorderWidth, 0);
  --uirButtonBorderStyle: var(--rButtonBorderWidth, solid);
  --uirButtonBorderColor: var(--rButtonBorderColor, currentColor);
  --uirButtonFontFamily: var(--rButtonFontFamily, inherit);
  --uirButtonFontSize: var(--rButtonFontSize, inherit);
  --uirButtonColor: var(--rButtonColor);

  background-color: var(--uirButtonBackgroundColor);
  padding: var(--uirButtonPadding);

  border-width: var(--uirButtonBorderWidth);
  border-style: var(--uirButtonBorderStyle);
  border-color: var(--uirButtonBorderColor);

  cursor: pointer;

  font-family: var(--uirButtonFontFamily);
  font-size: var(--uirButtonFontSize);
}

.r-button::-moz-focus-inner,
.r-button[type="button"]::-moz-focus-inner,
.r-button[type="reset"]::-moz-focus-inner,
.r-button[type="submit"]::-moz-focus-inner {
  /* Remove the inner border and padding in Firefox. */

  border-style: none;
  padding: 0;
}

/* The component will reset browser's styles of link */

.r-link {
  --uirLinkDisplay: var(--rLinkDisplay, inline-flex);
  --uirLinkTextColor: var(--rLinkTextColor);
  --uirLinkTextDecoration: var(--rLinkTextDecoration, none);
  display: var(--uirLinkDisplay) !important;
  color: var(--uirLinkTextColor) !important;
  text-decoration: var(--uirLinkTextDecoration) !important;
}

/*
  =====
  CORE STYLES
  =====
  */

.ai-element {
  --uiaiElementDisplay: var(--aiElementDisplay, inline-flex);
  --uiaiElementPadding: var(
    --aiElementPadding,
    var(--aiElementPaddingTop, 0) var(--aiElementPaddingRight, 0)
      var(--aiElementPaddingBottom, 0) var(--aiElementPaddingLeft, 0)
  );
  --uiaiElementColor: var(--aiElementColor);

  display: var(--uiaiElementDisplay);
  position: relative;
  overflow: hidden;
}

a.ai-element {
  padding: var(--uiaiElementPadding);
}

button.ai-element {
  --rButtonPadding: var(--uiaiElementPadding);
}

.ai-element__label {
  color: var(--uiaiElementColor);
}

/* 
  Styles of elements with the border on all sides
  */

.ai-element_type1 {
  --uiaiElementLineWeight: var(--aiElementLineWeight, 2px);
  --uiaiElementLineColor: var(--aiElementLineColor, #000);
}

.ai-element_type1::before,
.ai-element_type1::after {
  width: 100%;
  height: var(--uiaiElementLineWeight);
  left: 0;
}

.ai-element_type1::before {
  top: 0;
}

.ai-element_type1::after {
  bottom: 0;
}

.ai-element_type1 .ai-element__label::before,
.ai-element_type1 .ai-element__label::after {
  width: var(--uiaiElementLineWeight);
  height: 100%;
  top: 0;
}

.ai-element_type1 .ai-element__label::before {
  left: 0;
}

.ai-element_type1 .ai-element__label::after {
  right: 0;
}

.ai-element_type1::before,
.ai-element_type1::after,
.ai-element_type1 .ai-element__label::before,
.ai-element_type1 .ai-element__label::after {
  content: "";
  background-color: var(--uiaiElementLineColor);
  position: absolute;
  opacity: 1;

  will-change: transform, opacity;
  transition-property: transform, opacity;
}

.ai-element_type1:hover::before,
.ai-element_type1:hover::after,
.ai-element_type1:hover .ai-element__label::before,
.ai-element_type1:hover .ai-element__label::after {
  opacity: 0;
}

/* 
  Styles of elements with the bottom border
  */

.ai-element_type2 {
  --uiaiElementLineWeight: var(--aiElementLineWeight, 2px);
  --uiaiElementLineColor: var(--aiElementLineColor, #000);
  --aiElementPaddingBottom: var(--uiaiElementLineWeight);

  position: relative;
}

.ai-element_type2::after {
  content: "";
  width: 100%;
  height: var(--uiaiElementLineWeight);
  background-color: var(--uiaiElementLineColor);

  position: absolute;
  left: 0;
  bottom: 0;
}

/* 
  Styles of elements with background
  */

.ai-element_type3 {
  --uiaiElementLineColor: var(--aiElementLineColor, #000);
  --uiaiElementPadding: var(--aiElementPadding, 10px);
  transition: color 0.3s ease-out;
  z-index: 1;
}

.ai-element_type3::before,
.ai-element_type3::after {
  content: "";
  background-color: var(--uiaiElementLineColor);
  opacity: 1;
  position: absolute;
  z-index: -1;

  transition: transform 0.35s ease-out, opacity 0.35s ease-out 0.03s;
}

.ai-element_type3:hover::before,
.ai-element_type3:hover::after {
  opacity: 0;
  transition-delay: 0s;
}

.ai-element_text::before {
  content: attr(data-ai-element-text);
  color: var(--uiaiElementColorHover);
  position: absolute;
}

.ai-element_text::before,
.ai-element_text .ai-element__label {
  transition-property: transform;
  transition-timing-function: cubic-bezier(0.86, 0.6, 0.08, 1.01);
  transition-duration: 0.4s;
}

.ai-element_text:hover::before,
.ai-element_text:hover .ai-element__label {
  transition-duration: 0.3s;
}

/*
  =====
  EFFECTS
  =====
  */

/* effect 2 */

.ai-element2::after {
  transform: translate3d(0, 0, 0);
  transition: transform 0.2s ease-in;
}

.ai-element2:hover::after {
  transform: translate3d(-100%, 0, 0);
}

/*
  =====
  SETTINGS
  =====
  */

.ai-element {
  --aiElementLineWeight: 2px;
  --aiElementLineColor: #a8d0e6;
  --aiElementColor: #1b255a;
  --aiElementColorHover: #a8d0e6;
}

.ai-element_type1,
.ai-element_type3 {
  --aiElementPadding: 10px 15px;
}

.ai-element_type3 {
  --aiElementColor: #fff;
}
